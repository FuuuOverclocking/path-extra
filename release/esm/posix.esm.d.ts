import { pathPosix } from './posix/path.js';
export default pathPosix;
export { FileSystem, ParsedPath, FormatInputPathObject, PlatformPath, } from './common/types.js';
declare const delimiter: string, sep: string, posix: import("./common/types.js").PathPosix, win32: import("./common/types.js").PathWin32, basename: (p: string, ext?: string | undefined) => string, dirname: (p: string) => string, extname: (p: string) => string, format: (pP: import("./common/types.js").FormatInputPathObject) => string, isAbsolute: (p: string) => boolean, join: (...paths: string[]) => string, normalize: (p: string) => string, parse: (p: string) => import("./common/types.js").ParsedPath, relative: (from: string, to: string) => string, resolve: (...pathSegments: string[]) => string, toNamespacedPath: (path: string) => string, PathNice: typeof import("./index.esm.js").PathNice, PathNicePosix: typeof import("./posix/path-nice-posix.js").PathNicePosix, PathNiceWin32: typeof import("./index.esm.js").PathNiceWin32;
export { delimiter, sep, posix, win32, basename, dirname, extname, format, isAbsolute, join, normalize, parse, relative, resolve, toNamespacedPath, PathNice, PathNicePosix, PathNiceWin32 };
